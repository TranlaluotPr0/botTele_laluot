# features/zw_menu.py
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

ZERO_WIDTH_SPACE = "\u200b"

# Bi·∫øn tr·∫°ng th√°i: user n√†o ƒëang ch·ªù nh·∫≠p text ƒë·ªÉ zw
waiting_zw_users = set()

def get_waiting_zw_set():
    return waiting_zw_users

# Menu th√™m l·ª±a ch·ªçn ZW
def zw_menu():
    return [InlineKeyboardButton("üåÄ Ch√®n k√Ω t·ª± v√¥ h√¨nh (ZW)", callback_data="cmd_zw")]

# Callback khi b·∫•m menu
async def handle_zw_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    waiting_zw_users.add(user_id)
    await query.edit_message_text(
        "‚úçÔ∏è Nh·∫≠p chu·ªói vƒÉn b·∫£n m√† b·∫°n mu·ªën ch√®n **k√Ω t·ª± v√¥ h√¨nh U+200B** v√†o gi·ªØa c√°c k√Ω t·ª±."
    )

# Khi user g·ª≠i text sau khi ch·ªçn menu
async def handle_zw_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in waiting_zw_users:
        return  # Kh√¥ng ph·∫£i ƒëang trong ch·∫ø ƒë·ªô nh·∫≠p ZW

    original_text = update.message.text.strip()
    zw_text = ZERO_WIDTH_SPACE.join(list(original_text))

    waiting_zw_users.remove(user_id)
    await update.message.reply_text(
        f"‚úÖ K·∫øt qu·∫£:\n{zw_text}"
    )
