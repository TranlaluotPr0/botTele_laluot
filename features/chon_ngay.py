from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime

# === L·ªánh /chon_ngay: hi·ªÉn th·ªã n√∫t + cho ph√©p nh·∫≠p ng√†y ===
async def chon_ngay(update: Update, context: ContextTypes.DEFAULT_TYPE):
    received_files = context.bot_data.get("received_files", [])
    if not received_files:
        await update.message.reply_text("üì≠ Ch∆∞a c√≥ d·ªØ li·ªáu file n√†o.")
        return

    # L·∫•y c√°c ng√†y c√≥ trong log
    dates = sorted({f['time'].split()[-1] for f in received_files})
    context.user_data["chon_ngay_mode"] = True  # ƒê√°nh d·∫•u ƒëang ch·ªù nh·∫≠p ng√†y

    # Giao di·ªán n√∫t ch·ªçn ng√†y
    keyboard = []
    row = []
    for i, date in enumerate(dates, 1):
        row.append(InlineKeyboardButton(date, callback_data=f"chon_ngay_{date}"))
        if i % 3 == 0:
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    markup = InlineKeyboardMarkup(keyboard)

    # G·ª≠i h∆∞·ªõng d·∫´n + n√∫t ch·ªçn ng√†y
    await update.message.reply_text(
        f"üìÖ B·∫°n c√≥ th·ªÉ **ch·ªçn ng√†y b√™n d∆∞·ªõi** ho·∫∑c **nh·∫≠p ng√†y b·∫±ng tay** (v√≠ d·ª•: 19/5 ho·∫∑c 18-05).\n"
        f"‚Üí T·ª´ ng√†y: {dates[0]} ƒë·∫øn {dates[-1]}",
        reply_markup=markup
    )

# === Khi b·∫•m v√†o n√∫t ch·ªçn ng√†y ===
async def handle_ngay_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if not query.data.startswith("chon_ngay_"):
        return

    date_str = query.data.replace("chon_ngay_", "")
    await process_date(update, context, date_str, from_callback=True)

# === Khi ng∆∞·ªùi d√πng nh·∫≠p ng√†y b·∫±ng tay ===
async def handle_ngay_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("chon_ngay_mode"):
        return  # B·ªè qua n·∫øu kh√¥ng ·ªü tr·∫°ng th√°i ch·ªù nh·∫≠p ng√†y

    date_input = update.message.text.strip()
    # Chu·∫©n ho√° c√°c ki·ªÉu: 19/5, 19-05, 19/05/2025, ...
    for fmt in ["%d/%m", "%d-%m", "%d/%m/%Y", "%d-%m-%Y"]:
        try:
            parsed = datetime.strptime(date_input, fmt)
            date_str = parsed.strftime("%d-%m-%Y")
            await process_date(update, context, date_str)
            return
        except:
            continue
    await update.message.reply_text("‚ùå Ng√†y kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p l·∫°i (v√≠ d·ª•: 19/5 ho·∫∑c 19-05-2025).")

# === X·ª≠ l√Ω ng√†y ƒë√£ chu·∫©n h√≥a (d√πng chung cho n√∫t & text) ===
async def process_date(update: Update, context: ContextTypes.DEFAULT_TYPE, date_str: str, from_callback=False):
    received_files = context.bot_data.get("received_files", [])
    matched = [f for f in received_files if f["time"].endswith(date_str)]

    if from_callback:
        await update.callback_query.edit_message_text(
            f"üì§ ƒêang g·ª≠i {len(matched)} file t·ª´ ng√†y {date_str}..." if matched
            else f"‚ùå Kh√¥ng c√≥ file n√†o ng√†y {date_str}."
        )
    else:
        context.user_data["chon_ngay_mode"] = False  # Reset tr·∫°ng th√°i nh·∫≠p ng√†y
        await update.message.reply_text(
            f"üì§ ƒêang g·ª≠i {len(matched)} file t·ª´ ng√†y {date_str}..." if matched
            else f"‚ùå Kh√¥ng c√≥ file n√†o ng√†y {date_str}."
        )

    for f in matched:
        try:
            if "file_id" in f:
                await context.bot.send_document(
                    chat_id=update.effective_user.id,
                    document=f["file_id"],
                    caption=f"üìÑ {f['name']}\nüì¶ {f['size']}\n‚è∞ {f['time']}"
                )
            else:
                await context.bot.send_message(
                    chat_id=update.effective_user.id,
                    text=(
                        f"üìÑ {f['name']} ({f['size']})\n‚è∞ {f['time']}\n"
                        f"‚ö†Ô∏è Kh√¥ng th·ªÉ g·ª≠i l·∫°i file v√¨ thi·∫øu file_id."
                    )
                )
        except Exception as e:
            await context.bot.send_message(
                chat_id=update.effective_user.id,
                text=f"‚ö†Ô∏è L·ªói g·ª≠i file: {f['name']}\n{str(e)}"
            )
