import aiohttp
import asyncio
from telegram import Update
from telegram.ext import ContextTypes

# ƒê·ªãnh nghƒ©a URL API
API_URL = "http://160.30.21.71:5000/api/spam"

async def sp_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Ki·ªÉm tra tham s·ªë ƒë·∫ßu v√†o
    if len(context.args) != 2:
        await update.message.reply_text("‚ö†Ô∏è S·ª≠ d·ª•ng l·ªánh: /sp <phone> <count>")
        return
    
    phone = context.args[0]
    try:
        count = int(context.args[1])
        if count <= 0:
            await update.message.reply_text("‚ö†Ô∏è Count ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng!")
            return
    except ValueError:
        await update.message.reply_text("‚ö†Ô∏è Count ph·∫£i l√† s·ªë nguy√™n!")
        return
    
    # T·∫°o tham s·ªë cho API
    params = {
        "phone": phone,
        "count": count
    }

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(API_URL, params=params, timeout=10) as resp:
                if resp.status != 200:
                    await update.message.reply_text(f"‚ùå API tr·∫£ v·ªÅ HTTP {resp.status}")
                    return
                try:
                    data = await resp.json()
                except aiohttp.ContentTypeError:
                    await update.message.reply_text("‚ùå D·ªØ li·ªáu API kh√¥ng ph·∫£i JSON h·ª£p l·ªá.")
                    return
                
                # ƒê·ªãnh d·∫°ng ph·∫£n h·ªìi t·ª´ API (gi·∫£ s·ª≠ API tr·∫£ v·ªÅ c√°c tr∆∞·ªùng nh∆∞ nickname, stats, v.v.)
                response_text = (
                    f"üì¶ Th√¥ng tin:ƒë√£ g·ª≠i l·ªánh th√†nh c√¥ng\n"
                    
                )
                await update.message.reply_text(response_text)
    except asyncio.TimeoutError:
        await update.message.reply_text("‚è∞ API ph·∫£n h·ªìi qu√° l√¢u.")
    except aiohttp.ClientConnectionError:
        await update.message.reply_text("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn API.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå L·ªói: {str(e)}")
